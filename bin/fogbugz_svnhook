#!/usr/bin/env ruby

require "rubygems"
require "main"
require "uri"

$: << File.dirname(__FILE__) + "/../lib"
require "fogbugz_svnhook"

Main {
  mixin(:url) do
    option("url") {
      required
      argument_required
      cast :uri
      validate {|url| url.absolute?}
      description "The URL to the FogBugz installation, typically http://yoursite.com/fogbugz/"
    }
  end

  mode "login" do
    mixin :url

    option("email") {
      argument_required
      description "The E-Mail address with which you login to FogBugz"
    }

    option("password") {
      argument_required
      description "The password you use on the FogBugz site"
    }

    option("username") {
      argument_required
      description "Your Subversion username"
    }

    def run
      FogbugzSvnhook.login(:uri => params["url"].value, :username => params["username"].value, :email => params["email"].value, :password => params["password"].value)
    end
  end

  mode "logoff" do
    mixin :url

    option("token") {
      argument_required
      required
      description "The token with which you are authenticated to FogBugz"
    }

    def run
      FogbugzSvnhook.logoff(:uri => params["url"].value, :token => params["token"].value)
    end
  end

  mode "config" do
    def run
      FogbugzSvnhook.config(:uri => params["url"].value)
    end
  end

  mixin :common do
    mixin :url

    option("config", "C") {
      argument_required
      description "The path to a fogbugz-svnhook config file (YAML)"
    }

    option("svnlook") {
      argument_required
      default "/usr/bin/svnlook"
      description "The path to the svnlook executable (defaults to /usr/bin/svnlook)"
    }

    argument("repository") {
      optional
      description "The path to the Subversion repository"
    }

    argument("revision") {
      optional
      description "The revision which is being committed"
    }
  end

  mode "pre-commit" do
    mixin :common

    def run
      FogbugzSvnhook.pre_commit(:uri => params["url"].value, :repository => params["repository"].value, :revision => params["revision"].value, :svnlook => params["svnlook"].value, :config => params["config"].value)
    end
  end

  mode "post-commit" do
    mixin :common

    def run
      FogbugzSvnhook.post_commit(:uri => params["url"].value, :repository => params["repository"].value, :revision => params["revision"].value, :svnlook => params["svnlook"].value, :config => params["config"].value)
    end
  end

  mode "version" do
    def run
      require "fogbugz_svnhook/version"
      puts "FogbugzSvnhook, v#{FogbugzSvnhook::VERSION::STRING}"
    end
  end

  def run
    abort "No mode given.  Call with 'help' for usage information."
  end
}
